{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/darek/Seagate Expansion Drive/WebstormProjects/react_canvas_test/src/component/imagae_canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport img from \"./../assets/galaxy.jpg\";\nlet imgObj = new Image();\nimgObj.src = img;\nlet nw = imgObj.naturalWidth;\nlet nh = imgObj.naturalHeight;\nexport const ImgCanvas = () => {\n  _s();\n\n  const myCanvasRef = useRef(null);\n\n  const draw = ctx => {\n    ctx.fillStyle = \"green\";\n    ctx.fillRect(100, 100, 200, 200);\n    ctx.fill();\n  };\n\n  useEffect(() => {\n    let aspect = nw / nh;\n    let h = window.innerWidth / aspect;\n    const canvas = myCanvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = h;\n    const ctx = canvas.getContext(\"2d\");\n    console.log(h);\n    let animCancel;\n    let timeoutCancel;\n\n    const render = () => {\n      draw(ctx);\n    };\n\n    timeoutCancel = setTimeout(() => {\n      animCancel = window.requestAnimationFrame(render);\n    }, 1000 / 30);\n    return () => {\n      clearTimeout(timeoutCancel);\n      window.cancelAnimationFrame(animCancel);\n      return;\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"img_can_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"img_canvas\",\n      ref: myCanvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"img\",\n      src: img,\n      alt: \"galaxy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImgCanvas, \"map9aBllLgXHswEMrRgujqqfbAQ=\");\n\n_c = ImgCanvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgCanvas\");","map":{"version":3,"sources":["/media/darek/Seagate Expansion Drive/WebstormProjects/react_canvas_test/src/component/imagae_canvas.js"],"names":["React","useRef","useState","useEffect","img","imgObj","Image","src","nw","naturalWidth","nh","naturalHeight","ImgCanvas","myCanvasRef","draw","ctx","fillStyle","fillRect","fill","aspect","h","window","innerWidth","canvas","current","width","height","getContext","console","log","animCancel","timeoutCancel","render","setTimeout","requestAnimationFrame","clearTimeout","cancelAnimationFrame"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,IAAIC,MAAM,GAAG,IAAIC,KAAJ,EAAb;AACAD,MAAM,CAACE,GAAP,GAAaH,GAAb;AACA,IAAII,EAAE,GAAGH,MAAM,CAACI,YAAhB;AACA,IAAIC,EAAE,GAAGL,MAAM,CAACM,aAAhB;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAMC,WAAW,GAAGZ,MAAM,CAAC,IAAD,CAA1B;;AAEA,QAAMa,IAAI,GAAIC,GAAD,IAAS;AACpBA,IAAAA,GAAG,CAACC,SAAJ,GAAgB,OAAhB;AACAD,IAAAA,GAAG,CAACE,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B;AACAF,IAAAA,GAAG,CAACG,IAAJ;AACD,GAJD;;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,MAAM,GAAGX,EAAE,GAAGE,EAAlB;AACA,QAAIU,CAAC,GAAGC,MAAM,CAACC,UAAP,GAAoBH,MAA5B;AACA,UAAMI,MAAM,GAAGV,WAAW,CAACW,OAA3B;AACAD,IAAAA,MAAM,CAACE,KAAP,GAAeJ,MAAM,CAACC,UAAtB;AACAC,IAAAA,MAAM,CAACG,MAAP,GAAgBN,CAAhB;AACA,UAAML,GAAG,GAAGQ,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,CAAZ;AACA,QAAIU,UAAJ;AACA,QAAIC,aAAJ;;AACA,UAAMC,MAAM,GAAG,MAAM;AACnBlB,MAAAA,IAAI,CAACC,GAAD,CAAJ;AACD,KAFD;;AAGAgB,IAAAA,aAAa,GAAGE,UAAU,CAAC,MAAM;AAC/BH,MAAAA,UAAU,GAAGT,MAAM,CAACa,qBAAP,CAA6BF,MAA7B,CAAb;AACD,KAFyB,EAEvB,OAAO,EAFgB,CAA1B;AAIA,WAAO,MAAM;AACXG,MAAAA,YAAY,CAACJ,aAAD,CAAZ;AACAV,MAAAA,MAAM,CAACe,oBAAP,CAA4BN,UAA5B;AACA;AACD,KAJD;AAKD,GAvBQ,EAuBN,CAAChB,IAAD,CAvBM,CAAT;AAwBA,sBACE;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,GAAG,EAAED;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAET,GAA1B;AAA+B,MAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvCM;;GAAMQ,S;;KAAAA,S","sourcesContent":["import React, {useRef, useState, useEffect} from \"react\";\nimport img from \"./../assets/galaxy.jpg\";\nlet imgObj = new Image();\nimgObj.src = img;\nlet nw = imgObj.naturalWidth;\nlet nh = imgObj.naturalHeight;\nexport const ImgCanvas = () => {\n  const myCanvasRef = useRef(null);\n\n  const draw = (ctx) => {\n    ctx.fillStyle = \"green\";\n    ctx.fillRect(100, 100, 200, 200);\n    ctx.fill();\n  };\n\n  useEffect(() => {\n    let aspect = nw / nh;\n    let h = window.innerWidth / aspect;\n    const canvas = myCanvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = h;\n    const ctx = canvas.getContext(\"2d\");\n\n    console.log(h);\n    let animCancel;\n    let timeoutCancel;\n    const render = () => {\n      draw(ctx);\n    };\n    timeoutCancel = setTimeout(() => {\n      animCancel = window.requestAnimationFrame(render);\n    }, 1000 / 30);\n\n    return () => {\n      clearTimeout(timeoutCancel);\n      window.cancelAnimationFrame(animCancel);\n      return;\n    };\n  }, [draw]);\n  return (\n    <section className=\"img_can_wrapper\">\n      <canvas className=\"img_canvas\" ref={myCanvasRef}></canvas>\n      <img className=\"img\" src={img} alt=\"galaxy\" />\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}