{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/darek/Seagate Expansion Drive/WebstormProjects/react_canvas_test/src/component/imagae_canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport img from \"./../assets/galaxy.jpg\";\nlet imgObj = new Image();\nimgObj.src = img;\nlet nw = imgObj.naturalWidth;\nlet nh = imgObj.naturalHeight;\nexport const ImgCanvas = () => {\n  _s();\n\n  const myCanvasRef = useRef(null);\n  const w = useRef(600);\n  const h = useRef(400);\n\n  const draw = (ctx, canvas) => {\n    ctx.drawImage(imgObj, 0, 0, w.current, h.current);\n  };\n\n  const getImgData = (ctx, canvas) => {\n    let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    let arr = imgData.data;\n\n    for (let i = 0; i < arr.length; i = i + 4) {\n      let ttl = arr[i] + arr[i + 1] + arr[i + 2];\n      let avg = parseInt(ttl / 3);\n      arr[i] = avg;\n      arr[i + 1] = avg;\n      arr[i + 2] = avg;\n    }\n\n    console.log(); // imgData.data = arr;\n    // ctx.putImageData(imgData, 0, 0);\n  };\n\n  useEffect(() => {\n    const canvas = myCanvasRef.current;\n    canvas.width = w.current;\n    canvas.height = h.current;\n    let aspect = nw / nh;\n    h.current = w.current / aspect;\n    const ctx = canvas.getContext(\"2d\");\n    let animCancel;\n    let timeoutCancel;\n    draw(ctx);\n    getImgData(ctx, canvas); // console.log(\"a\");\n    // const render = () => {\n    //   draw(ctx);\n    //   console.log(\"b\");\n    //   timeoutCancel = setTimeout(() => {\n    //     animCancel = window.requestAnimationFrame(render);\n    //   }, 1000 / 10);\n    // };\n    // render();\n\n    return () => {\n      clearTimeout(timeoutCancel);\n      window.cancelAnimationFrame(animCancel);\n      return;\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"img_can_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"img_canvas\",\n      ref: myCanvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImgCanvas, \"Ion6hIyYp6sNMvJ7sgmH0DIRP0M=\");\n\n_c = ImgCanvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgCanvas\");","map":{"version":3,"sources":["/media/darek/Seagate Expansion Drive/WebstormProjects/react_canvas_test/src/component/imagae_canvas.js"],"names":["React","useRef","useState","useEffect","img","imgObj","Image","src","nw","naturalWidth","nh","naturalHeight","ImgCanvas","myCanvasRef","w","h","draw","ctx","canvas","drawImage","current","getImgData","imgData","getImageData","width","height","arr","data","i","length","ttl","avg","parseInt","console","log","aspect","getContext","animCancel","timeoutCancel","clearTimeout","window","cancelAnimationFrame"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from \"react\";\nimport img from \"./../assets/galaxy.jpg\";\nlet imgObj = new Image();\nimgObj.src = img;\nlet nw = imgObj.naturalWidth;\nlet nh = imgObj.naturalHeight;\nexport const ImgCanvas = () => {\n  const myCanvasRef = useRef(null);\n  const w = useRef(600);\n  const h = useRef(400);\n\n  const draw = (ctx, canvas) => {\n    ctx.drawImage(imgObj, 0, 0, w.current, h.current);\n  };\n\n  const getImgData = (ctx, canvas) => {\n    let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    let arr = imgData.data;\n    for (let i = 0; i < arr.length; i = i + 4) {\n      let ttl = arr[i] + arr[i + 1] + arr[i + 2];\n      let avg = parseInt(ttl / 3);\n      arr[i] = avg;\n      arr[i + 1] = avg;\n      arr[i + 2] = avg;\n    }\n    console.log();\n    // imgData.data = arr;\n    // ctx.putImageData(imgData, 0, 0);\n  };\n\n  useEffect(() => {\n    const canvas = myCanvasRef.current;\n    canvas.width = w.current;\n    canvas.height = h.current;\n    let aspect = nw / nh;\n    h.current = w.current / aspect;\n\n    const ctx = canvas.getContext(\"2d\");\n\n    let animCancel;\n    let timeoutCancel;\n    draw(ctx);\n    getImgData(ctx, canvas);\n    // console.log(\"a\");\n    // const render = () => {\n    //   draw(ctx);\n    //   console.log(\"b\");\n\n    //   timeoutCancel = setTimeout(() => {\n    //     animCancel = window.requestAnimationFrame(render);\n    //   }, 1000 / 10);\n    // };\n    // render();\n    return () => {\n      clearTimeout(timeoutCancel);\n      window.cancelAnimationFrame(animCancel);\n      return;\n    };\n  }, [draw]);\n  return (\n    <section className=\"img_can_wrapper\">\n      <canvas className=\"img_canvas\" ref={myCanvasRef}></canvas>\n      {/* <img className=\"img\" src={img} alt=\"galaxy\" /> */}\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}