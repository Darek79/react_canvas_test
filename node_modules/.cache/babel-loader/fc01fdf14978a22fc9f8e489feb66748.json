{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/darek/Seagate Expansion Drive/WebstormProjects/react_canvas_test/src/component/imagae_canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport img from \"./../assets/galaxy.jpg\";\nlet imgObj = new Image();\nimgObj.src = img;\nlet nw = imgObj.naturalWidth;\nlet nh = imgObj.naturalHeight;\nexport const ImgCanvas = () => {\n  _s();\n\n  const myCanvasRef = useRef(null);\n  const w = useRef(600);\n  const h = useRef(400);\n\n  const draw = ctx => {\n    // ctx.drawImage(imgObj, 0, 0, w.current, h.current);\n    ctx.beginPath();\n    ctx.arc(10, 10, 20, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.stroke();\n  };\n\n  const getImgData = (ctx, canvas) => {\n    let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    console.log(imgData.data);\n  }; // useEffect(() => {\n  //   const canvas = myCanvasRef.current;\n  //   canvas.width = 600;\n  //   canvas.height = 400;\n  //   // let aspect = nw / nh;\n  //   // h.current = w.current / aspect;\n  //   const ctx = canvas.getContext(\"2d\");\n  //   let animCancel;\n  //   let timeoutCancel;\n  //   const render = () => {\n  //     draw(ctx);\n  //     console.log(\"a\");\n  //     // getImgData(ctx, canvas);\n  //     timeoutCancel = setTimeout(() => {\n  //       animCancel = window.requestAnimationFrame(render);\n  //     }, 1000 / 30);\n  //   };\n  //   return () => {\n  //     clearTimeout(timeoutCancel);\n  //     window.cancelAnimationFrame(animCancel);\n  //     return;\n  //   };\n  // }, [draw]);\n\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const ctx = canvas.getContext(\"2d\");\n    let frameC = 5;\n    let animCancel;\n    let timeoutCancel;\n\n    const render = () => {\n      draw(ctx, frameC);\n      timeoutCancel = setTimeout(() => {\n        if (sizeRef.current < 100) {\n          sizeRef.current += 0.2;\n        }\n\n        angleRef.current = counterRef.current * 0.5;\n        radiusRef.current = scaleRef.current * Math.sqrt(angleRef.current);\n        posXRef.current += radiusRef.current * Math.sin(angleRef.current);\n        posYRef.current += radiusRef.current * Math.cos(angleRef.current); // console.log(Math.floor(posXRef.current));\n\n        counterRef.current++;\n        console.log(counterRef.current); // angleRef.current +=\n        // \t0.1 > -0.9 ? (angleRef.current += 0.1) : (angleRef.current -= 0.1);\n\n        if (counterRef.current < 600) {\n          animCancel = window.requestAnimationFrame(render);\n        }\n      }, 1000 / 40);\n    };\n\n    if (click) {\n      render();\n    }\n\n    return () => {\n      window.cancelAnimationFrame(animCancel);\n      clearTimeout(timeoutCancel);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"img_can_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"img_canvas\",\n      ref: myCanvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImgCanvas, \"Ion6hIyYp6sNMvJ7sgmH0DIRP0M=\");\n\n_c = ImgCanvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgCanvas\");","map":{"version":3,"sources":["/media/darek/Seagate Expansion Drive/WebstormProjects/react_canvas_test/src/component/imagae_canvas.js"],"names":["React","useRef","useState","useEffect","img","imgObj","Image","src","nw","naturalWidth","nh","naturalHeight","ImgCanvas","myCanvasRef","w","h","draw","ctx","beginPath","arc","Math","PI","fill","stroke","getImgData","canvas","imgData","getImageData","width","height","console","log","data","canvasRef","current","window","innerWidth","innerHeight","getContext","frameC","animCancel","timeoutCancel","render","setTimeout","sizeRef","angleRef","counterRef","radiusRef","scaleRef","sqrt","posXRef","sin","posYRef","cos","requestAnimationFrame","click","cancelAnimationFrame","clearTimeout"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from \"react\";\nimport img from \"./../assets/galaxy.jpg\";\nlet imgObj = new Image();\nimgObj.src = img;\nlet nw = imgObj.naturalWidth;\nlet nh = imgObj.naturalHeight;\nexport const ImgCanvas = () => {\n  const myCanvasRef = useRef(null);\n  const w = useRef(600);\n  const h = useRef(400);\n\n  const draw = (ctx) => {\n    // ctx.drawImage(imgObj, 0, 0, w.current, h.current);\n    ctx.beginPath();\n    ctx.arc(10, 10, 20, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.stroke();\n  };\n\n  const getImgData = (ctx, canvas) => {\n    let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    console.log(imgData.data);\n  };\n\n  // useEffect(() => {\n  //   const canvas = myCanvasRef.current;\n  //   canvas.width = 600;\n  //   canvas.height = 400;\n  //   // let aspect = nw / nh;\n  //   // h.current = w.current / aspect;\n\n  //   const ctx = canvas.getContext(\"2d\");\n\n  //   let animCancel;\n  //   let timeoutCancel;\n  //   const render = () => {\n  //     draw(ctx);\n  //     console.log(\"a\");\n  //     // getImgData(ctx, canvas);\n  //     timeoutCancel = setTimeout(() => {\n  //       animCancel = window.requestAnimationFrame(render);\n  //     }, 1000 / 30);\n  //   };\n\n  //   return () => {\n  //     clearTimeout(timeoutCancel);\n  //     window.cancelAnimationFrame(animCancel);\n  //     return;\n  //   };\n  // }, [draw]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const ctx = canvas.getContext(\"2d\");\n    let frameC = 5;\n    let animCancel;\n    let timeoutCancel;\n\n    const render = () => {\n      draw(ctx, frameC);\n      timeoutCancel = setTimeout(() => {\n        if (sizeRef.current < 100) {\n          sizeRef.current += 0.2;\n        }\n        angleRef.current = counterRef.current * 0.5;\n        radiusRef.current = scaleRef.current * Math.sqrt(angleRef.current);\n        posXRef.current += radiusRef.current * Math.sin(angleRef.current);\n        posYRef.current += radiusRef.current * Math.cos(angleRef.current);\n        // console.log(Math.floor(posXRef.current));\n        counterRef.current++;\n        console.log(counterRef.current);\n\n        // angleRef.current +=\n        // \t0.1 > -0.9 ? (angleRef.current += 0.1) : (angleRef.current -= 0.1);\n        if (counterRef.current < 600) {\n          animCancel = window.requestAnimationFrame(render);\n        }\n      }, 1000 / 40);\n    };\n\n    if (click) {\n      render();\n    }\n\n    return () => {\n      window.cancelAnimationFrame(animCancel);\n      clearTimeout(timeoutCancel);\n    };\n  }, [draw]);\n  return (\n    <section className=\"img_can_wrapper\">\n      <canvas className=\"img_canvas\" ref={myCanvasRef}></canvas>\n      {/* <img className=\"img\" src={img} alt=\"galaxy\" /> */}\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}